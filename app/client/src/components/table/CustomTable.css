.react-aria-Table {
  --highlight-background: var(--custom-pink);
  --highlight-foreground: var(--custom-white);
  --border-color: var(--custom-grey-medium-dark);
  --background-color: var(--custom-white);
  --text-color: var(--custom-black);
  --text-color-disabled: var(--custom-grey-dark);

  background: var(--background-color);
  outline: none;
  border-spacing: 0;

  /* Table is focossed by keyboard */
  &[data-focus-visible] {
    border-color: var(--highlight-background);
    box-shadow: 0 0 0 1px var(--highlight-background);
  }

  .react-aria-TableHeader {
    background-color: var(--custom-black);
    color: white;
    /* Style columns and last row */
    & tr:last-child .react-aria-Column {
      border-bottom: 4px solid var(--border-color);
      cursor: default;
    }
  }

  .react-aria-Column {
    color: white !important;
    font-weight: bold;
    &[colspan] {
      text-align: right;
    }

    .sort-indicator {
      padding: 0 2px;
    }

    &[aria-sort="none"] .sort-indicator {
      visibility: hidden;
    }
  }

  .react-aria-TableBody {
    background-color: var(--custom-grey-light);
    &[data-empty] {
      background-color: transparent;
      text-align: center;
      font-style: italic;
      & td {
        padding: 20px;
      }
    }
  }

  .react-aria-Row:nth-child(even) {
    background-color: var(--custom-grey-medium);
  }

  .react-aria-Row {
    outline: none;
    cursor: pointer;
    color: var(--text-color);
    position: relative;
    transform: scale(1);

    &[data-focus-visible] {
      outline: 2px solid var(--highlight-background);
      outline-offset: -2px;
    }

    &[data-hovered] .react-aria-Cell {
      background-color: var(--custom-pink);
      color: white;
    }

    &[data-pressed] .react-aria-Cell {
      background: var(--spectrum-global-color-gray-200);
    }

    &[aria-selected="true"] {
      .react-aria-Cell {
        background: var(--highlight-background);
        color: var(--highlight-foreground);
      }

      &[data-focus-visible],
      .react-aria-Cell[data-focus-visible] {
        outline-color: var(--highlight-foreground);
        outline-offset: -4px;
      }

      .react-aria-Button {
        color: var(--highlight-foreground);
        --focus-ring-color: var(--highlight-foreground);
        --hover-highlight: rgb(255 255 255 / 0.1);
        --active-highlight: rgb(255 255 255 / 0.2);
      }
    }

    &[aria-disabled] {
      color: var(--text-color-disabled);
    }
  }

  .react-aria-Cell,
  .react-aria-Column {
    padding: 10px 20px;
    text-align: left;
    outline: none;

    &[data-focus-visible] {
      outline: 2px solid var(--highlight-background);
      outline-offset: -2px;
    }
  }

  .react-aria-Cell {
    transform: translateZ(0);
    padding-top: 15px;
    padding-bottom: 15px;
    word-wrap: break-word;
    overflow-wrap: break-word;
    white-space: normal;
  }

  /* join selected items if :has selector is supported */
  @supports selector(:has(.foo)) {
    .react-aria-Row[aria-selected="true"]:has(+ [aria-selected="true"])
      .react-aria-Cell,
    .react-aria-Row[aria-selected="true"]:has(
        + .react-aria-DropIndicator + [aria-selected="true"]
      )
      .react-aria-Cell {
      border-end-start-radius: 0;
      border-end-end-radius: 0;
    }

    .react-aria-Row[aria-selected="true"]
      + [aria-selected="true"]
      .react-aria-Cell,
    .react-aria-Row[aria-selected="true"]
      + .react-aria-DropIndicator
      + [aria-selected="true"]
      .react-aria-Cell {
      border-start-start-radius: 0;
      border-start-end-radius: 0;
    }
  }
}

.react-aria-Checkbox {
  --deselected-color: gray;
  --deselected-color-pressed: dimgray;
  --selected-color: slateblue;
  --selected-color-pressed: lch(from slateblue calc(l - 10%) c h);
  --checkmark-color: white;
  --focus-ring-color: slateblue;

  width: 1rem;
  height: 1rem;
  border: 2px solid var(--deselected-color);
  border-radius: 4px;
  transition: all 200ms;
  display: flex;
  align-items: center;
  justify-content: center;

  & svg {
    width: 0.857rem;
    height: 0.857rem;
    fill: none;
    stroke: var(--checkmark-color);
    stroke-width: 3px;
    stroke-dasharray: 22px;
    stroke-dashoffset: 66;
    transition: all 200ms;
  }

  &[data-focus-visible] {
    box-shadow: 0 0 0 2px var(--spectrum-alias-background-color-default),
      0 0 0 4px var(--focus-ring-color);
  }

  &[data-pressed] {
    border-color: var(--deselected-color-pressed);
  }

  &[data-selected],
  &[data-indeterminate] {
    border-color: var(--selected-color);
    background: var(--selected-color);

    &[data-pressed] {
      border-color: var(--selected-color-pressed);
      background: var(--selected-color-pressed);
    }

    &[data-focus-visible] {
      box-shadow: 0 0 0 2px var(--background-color),
        0 0 0 4px var(--selected-color);
    }

    & svg {
      stroke-dashoffset: 44;
    }
  }

  &[data-indeterminate] {
    & svg {
      stroke: none;
      fill: var(--checkmark-color);
    }
  }

  &[data-disabled] {
    opacity: 0.4;
  }
}

:where(.react-aria-Row) .react-aria-Checkbox {
  --selected-color: white;
  --selected-color-pressed: #ddd;
  --checkmark-color: slateblue;
  --background-color: var(--highlight-background);
}

.react-aria-Button {
  background: transparent;
  border: none;
  border-radius: 4px;
  appearance: none;
  vertical-align: middle;
  font-size: 1.2rem;
  text-align: center;
  line-height: 1.2em;
  margin: 0;
  outline: none;
  padding: 4px 6px;
  transition: background 200ms;
  --focus-ring-color: slateblue;
  --hover-highlight: var(--spectrum-alias-highlight-hover);
  --active-highlight: var(--spectrum-alias-highlight-active);

  &[data-hovered] {
    background: var(--hover-highlight);
  }

  &[data-pressed] {
    background: var(--active-highlight);
  }

  &[data-focus-visible] {
    box-shadow: 0 0 0 2px var(--focus-ring-color);
  }
}

@media (forced-colors: active) {
  .react-aria-Table {
    forced-color-adjust: none;

    --highlight-background: Highlight;
    --highlight-foreground: HighlightText;
    --border-color: ButtonBorder;
    --background-color: ButtonFace;
    --text-color: ButtonText;
    --text-color-disabled: GrayText;
  }

  .react-aria-Checkbox {
    forced-color-adjust: none;

    --deselected-color: ButtonBorder;
    --deselected-color-pressed: ButtonBorder;
    --selected-color: Highlight;
    --selected-color-pressed: Highlight;
    --checkmark-color: HighlightText;
    --spectrum-alias-background-color-default: Canvas;
    --focus-ring-color: Highlight;

    &[data-disabled] {
      opacity: 1;
      --deselected-color: GrayText;
      --selected-color: GrayText;
    }
  }

  .react-aria-Row .react-aria-Checkbox {
    --selected-color: ButtonFace;
    --selected-color-pressed: ButtonFace;
    --checkmark-color: ButtonText;
  }

  .react-aria-Button {
    forced-color-adjust: none;
    --focus-ring-color: Highlight;
  }
}

.table-group {
  display: flex;
  flex-direction: column;
}

.table-separator {
  background-color: var(--custom-grey-dark);
  padding: 5px 20px;
  color: var(--custom-white);
  font-weight: bold;
}

tr {
  display: flex;
  flex-direction: row;
  max-width: 100%;

  & > * {
    flex: 0 0 100px;
    flex-basis: 100px;
    flex-grow: 0;
    flex-shrink: 0;
  }

  & > *:first-child {
    flex-grow: 1;
    max-width: 100%;
  }
}
